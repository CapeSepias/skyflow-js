# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Node.js Package

on: 
  push:
    branches:
      - master
      
jobs:
  build-sdk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.17.6
      - run: npm install
      
      - name: npm build
        run: npm run build-browser-sdk
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.IFRAME_SECURE_ORGIN }}
          IFRAME_SECURE_SITE: ${{ IFRAME_SECURE_SITE }}
          
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.BLITZ_AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BLITZ_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BLITZ_AWS_ACCESS_KEY_SECRET }}
          AWS_REGION: ${{ secrets.BLITZ_AWS_REGION }}
          SOURCE_DIR: "dist/v1"
          DEST_DIR: "v1/"

  build-iframe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.17.6
      - run: npm install
      - name: npm build
        run: npm run build-iframe
        env:
          IFRAME_SECURE_ORGIN: ${{ secrets.IFRAME_SECURE_ORGIN }}
          IFRAME_SECURE_SITE: ${{ IFRAME_SECURE_SITE }}      
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.BLITZ_AWS_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.BLITZ_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BLITZ_AWS_ACCESS_KEY_SECRET }}
          AWS_REGION: ${{ secrets.BLITZ_AWS_REGION }}
          SOURCE_DIR: "dist/v1/elements/"
          DEST_DIR: "v1/elements"
          
  aws-cf-invalidate:
    runs-on: ubuntu-latest
    needs: [build-sdk, build-iframe]
    steps: 
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0      
    - name: Configure AWS credentials Prod account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.BLITZ_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.BLITZ_AWS_ACCESS_KEY_SECRET }}
        aws-region: us-east-1
    - name: invalidate-cf-distribution
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.BLITZ_CF_DISTRIBUTION_ID }} --paths "/*"
            
